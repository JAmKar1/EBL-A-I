import telebot
from telebot import types

bot = telebot.TeleBot('7918889338:AAF2f5gpw2Hp9E_yjRKbeFkNjD4d9giLmPg')

@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(message.chat.id, "üéâ –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –ø–æ –ø–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥—É.")
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEL_FZnl8N4ENngAmvarOHf0wABn5x9bXgAAjxpAAL9CblIqU6FdSNFcSQ2BA')  
    show_main_menu(message)

def show_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üèãüèª‚Äç‚ôÇÔ∏è–ü–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥ –∏ —Å–∏–ª–æ–≤—ã–µ"))
    markup.add(types.KeyboardButton("üí™üèª–ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥"))
    bot.send_message(message.chat.id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "üèãüèª‚Äç‚ôÇÔ∏è–ü–∞—É—ç—Ä–ª–∏—Ñ—Ç–∏–Ω–≥ –∏ —Å–∏–ª–æ–≤—ã–µ")
def handle_powerlifting_choice(message):
    show_powerlifting_options(message)

@bot.message_handler(func=lambda message: message.text == "üí™üèª–ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥")
def handle_bodybuilding_choice(message):
    show_bodybuilding_options(message)

def show_powerlifting_options(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "üü¢–ù–∞—á–∞–ª—å–Ω—ã–π",
        "üü°–°—Ä–µ–¥–Ω–∏–π",
        "üî¥–í—ã—Å–æ–∫–∏–π",
        "üìö–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏",
        "üîô –ù–∞–∑–∞–¥"
    ]
    markup.add(*[types.KeyboardButton(btn) for btn in buttons])
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ç–µ–º:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ["üü¢–ù–∞—á–∞–ª—å–Ω—ã–π", "üü°–°—Ä–µ–¥–Ω–∏–π", "üî¥–í—ã—Å–æ–∫–∏–π", "üìö–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏"])
def handle_powerlifting_levels(message):
    send_excel_file(message)

@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_to_main_menu(message):
    show_main_menu(message)

def send_excel_file(message):
    excel_file_paths = {
        "üü¢–ù–∞—á–∞–ª—å–Ω—ã–π": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–ú—É–∂—Å–∫–æ–π –Ω–∞—á–∞–ª—å–Ω—ã–π 2—Ö2.xlsx',
        "üü°–°—Ä–µ–¥–Ω–∏–π": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–°—Ä–µ–¥–Ω–∏–π.xlsx',
        "üî¥–í—ã—Å–æ–∫–∏–π": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–í—ã—Å–æ–∫–∏–π.xlsx',
        "üìö–ñ–∏–º–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏": 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–ñ–∏–º–æ–≤—ã–µ_—Ä–∞—Å–∫–ª–∞–¥–∫–∏.xlsx'
    }

    selected_level = message.text
    file_path = excel_file_paths.get(selected_level)
    
    if file_path:
        try:
            with open(file_path, 'rb') as file:
                bot.send_document(message.chat.id, file)
                bot.send_message(message.chat.id, f"–í–æ—Ç —Ñ–∞–π–ª –¥–ª—è —É—Ä–æ–≤–Ω—è: {selected_level}.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {str(e)}")

def show_bodybuilding_options(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "üë® –ú—É–∂—á–∏–Ω–∞",
        "üë© –ñ–µ–Ω—â–∏–Ω–∞",
        "üîô –ù–∞–∑–∞–¥"
    ]
    markup.add(*[types.KeyboardButton(btn) for btn in buttons])
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ["üë® –ú—É–∂—á–∏–Ω–∞", "üë© –ñ–µ–Ω—â–∏–Ω–∞"])
def handle_bodybuilding_gender(message):
    show_experience_options(message, message.text)

@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_to_bodybuilding_options(message):
    show_bodybuilding_options(message)

def show_experience_options(message, gender):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "–ú–µ–Ω—å—à–µ –≥–æ–¥–∞",
        "1-3 –≥–æ–¥–∞",
        "–ë–æ–ª—å—à–µ 3 –ª–µ—Ç",
        "üîô –ù–∞–∑–∞–¥"
    ]
    markup.add(*[types.KeyboardButton(btn) for btn in buttons])
    bot.send_message(message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {gender}. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–∂ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ["–ú–µ–Ω—å—à–µ –≥–æ–¥–∞", "1-3 –≥–æ–¥–∞", "–ë–æ–ª—å—à–µ 3 –ª–µ—Ç"])
def handle_experience_selection(message):
    show_training_days_options(message)

def show_training_days_options(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "2x2",
        "3 –¥–Ω—è –≤ –Ω–µ–¥–µ–ª—é",
        "üîô –ù–∞–∑–∞–¥"
    ]
    markup.add(*[types.KeyboardButton(btn) for btn in buttons])
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text in ["2x2", "3 –¥–Ω—è –≤ –Ω–µ–¥–µ–ª—é"])
def handle_training_days_selection(message):
    if message.text == "2x2":
        handle_two_days_selection(message)
    elif message.text == "3 –¥–Ω—è –≤ –Ω–µ–¥–µ–ª—é":
        handle_three_days_selection(message)


def handle_two_days_selection(message):
    excel_file_path = 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–ú—É–∂—Å–∫–æ–π –Ω–∞—á–∞–ª—å–Ω—ã–π 2—Ö2.xlsx'


    try:
        with open(excel_file_path, 'rb') as file:
            bot.send_document(message.chat.id, file)
            bot.send_message(message.chat.id, "–í–æ—Ç —Ñ–∞–π–ª –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 2x2.")
    except Exception as e:
        bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {str(e)}")

@bot.message_handler(func=lambda message: message.text == "3 –¥–Ω—è –≤ –Ω–µ–¥–µ–ª—é")
def handle_three_days_selection(message):
    excel_file_path = 'D:\\TelegramBot\\BOT\\BBB\\–ü–∞—É—ç—Ä\\–ú—É–∂—Å–∫–æ–π –Ω–∞—á–∞–ª—å–Ω—ã–π 3—Ö –¥–Ω–µ–≤–Ω—ã–π.xlsx'  # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É

    try:
        with open(excel_file_path, 'rb') as file:
            bot.send_document(message.chat.id, file)
            bot.send_message(message.chat.id, "–í–æ—Ç —Ñ–∞–π–ª –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 3 –¥–Ω—è –≤ –Ω–µ–¥–µ–ª—é.")
    except Exception as e:
        bot.send_message(message.chat.id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {str(e)}")

bot.polling(none_stop=True)
